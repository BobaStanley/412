library(tidyverse)
library(tidyverse)
ufc_stats
refresh_data()
data(ufc_stats)
ufc_stats
frac_propcorr_post %>%
ggplot(aes(y = prop_corr, x = Condition)) +  # pass the dataset to ggplot, but then use stat_summary to calculate the mean within ggplot:
stat_summary(geom = "point", # we tell it which geom to use, within the stat_summary function (but remove the geom_ bit of the name)
fun = "mean" # tell it which function to use (there are different function parameters depending on what you're trying to plot)
)
plot(cars)
x <- 2+2
help()
2+2
make_negative <- function(x){
abs(x)*(-1)
}
make_negative(-3)
favenumber <- 8
?sd
sd(1:2)^2
(7*8) <= make_negative(56)|| TRUE
my_first_vector <- c(1, 2, 3)
my_second_vector <- c(3, 4, 5)
my_second_vector
my_list <- list(my_first_vector, my_second_vector)
my_list
as.data.frame(my_list)
x <- 10
if (x < 10){
print("low")
}else if (x>=10 && x<=20){
print("medium")
}else{
print("high")
}
names <- c("John", "joe", "Stan")
for(name in names){
message <- paste("Hi", names)
print(message)
}
library(tidyverse)
my_numbers <- c(1,2,3,4,5,8,9,10)
mean(my_numbers)
glimpse(ChickWeight)
ChickWeight %>%
select(age_days= Time, weight_gm= weight) %>%  #%>%--just means "and then"
head( n = 3)
chick_class <- ChickWeight %>%
select(chick_id = Chick, diet = Diet, age_days = Time, weight_gm = weight)
chick_class %>%
arrange(chick_id) %>%
head()
chick_class %>%
mutate(new_column = "value") %>%
head(n = 3)
chick_class %>%
mutate(weight_per_day = weight_gm/age_days) %>%
head(n = 3)
chick_class %>%
mutate(session = case_when(age_days == 0 ~ "birth",
age_days == 20 ~ "last1",
age_days == 21 ~ "last2",
TRUE           ~ as.character(age_days)))
chick_class %>%
mutate(weight_lbs = weight_gm/453.6) %>%
group_by(diet)%>%
summarise(n_obs = n(), mean_wgt_gm = mean(weight_gm))
?pivot_longer
billboard %>%
pivot_longer(cols= starts_with("wk"), names_to = "week", values_to = "rank", names_transform = list(week = parse_number)) #or names_prefix = "wk"
billboard %>%
separate(col =date.entered, into= c("year", "month", "day"), sep = "-")
billboard %>%
separate(col =date.entered, into= c("year", NA, NA), sep = "-")
?fish_encounters
fish_encounters %>%
filter(is.na(seen) == TRUE)
fish_encounters %>%
group_by(seen) %>%
count()
fish_encounters %>%
complete(fish, station)
fish_encounters %>%
group_by(station) %>%
count()
fish_complete <- fish_encounters %>%
complete(fish, station)
fish_complete %>%
group_by(station) %>%
count()
fish_encounters %>%
complete(fish, station, fill = list(seen = 0)) %>%
group_by(seen) %>%
count()
fish_encounters %>%
complete(fish, station) %>%
replace_na(list(seen=0))
?read_csv
billboard %>%
write_csv("billboard_data.csv")
billboard_edited <- read_csv("billboard_data.csv", name_repair = "unique")
billboard_edited
billboard_edited %>%
group_by("wk66") %>%
count()
billboard_edited %>%
select(-date.entered...3, date.entered = date.entered...4)
library(tidyverse)
library(dplyr)
ufc_stats
ufc_stats
data("ufc_stats")
library(tidyverse)
data("ufc_stats")
load("C:/Users/stanl/OneDrive/Documents/GitHub/412/FinalProject/ufc_stats.rda")
ufc_stats
refresh_data()
refresh_data(ufc_stats)
library(tidyverse)
write.csv(ufc_stats,file="ufc_stats.csv")
library(tidyverse)
ufc_stats %>% group_by(fighter) %>%
summarise(total_significant_strikes = sum(significant_strikes_landed)) %>%
arrange(-total_significant_strikes) %>%
head()
View(ufc_stats)
# Calculate knockdown rate for each fighter
knockdown_rate <- knockdowns / significant_strikes_attempted
ufc_stats
ufc_stats %>% group_by(fighter) %>%
summarise(total_significant_strikes = sum(significant_strikes_landed)) %>%
arrange(-total_significant_strikes) %>%
head()
# Calculate knockdown rate for each fighter
knockdown_rate <- knockdowns / significant_strikes_attempted
ufc_stats %>%
group_by(fighter) %>%
summarise(knockdown_rate = sum(knockdowns) / sum(significant_strikes_attempted)) %>%
arrange(desc(knockdown_rate)) %>%
head()
ufc_stats %>%
group_by(fighter) %>%
summarise(striking_efficiency = sum(significant_strikes_landed) / sum(significant_strikes_attempted)) %>%
arrange(desc(striking_efficiency)) %>%
head()
library(tidyverse)
ufc_stats %>%
group_by(fighter) %>%
summarise(entertainment_score =
(knockdowns + significant_strikes_landed - significant_strikes_attempted + submission_attempt) / 4) %>%
arrange(desc(entertainment_score)) %>%
head()
ufc_stats %>%
group_by(fighter) %>%
summarise(grappling_efficiency = sum(takedown_successful) / sum(takedown_attempted)) %>%
arrange(desc(grappling_efficiency)) %>%
head()
ufc_stats %>%
group_by(fighter) %>%
summarise(ppv_impact_score =
(knockdowns + significant_strikes_landed + takedown_successful + (1 - takedown_rate) * 10) / 4 +
sum(attendance) / 1000) %>%
arrange(desc(ppv_impact_score)) %>%
head()
